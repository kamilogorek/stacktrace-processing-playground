{"version":3,"file":"bundle.min.js","sources":["webpack://webpack-plugin/./node_modules/@sentry/utils/esm/global.js","webpack://webpack-plugin/./node_modules/@sentry/utils/esm/node.js","webpack://webpack-plugin/./node_modules/@sentry/utils/esm/env.js","webpack://webpack-plugin/./node_modules/@sentry/utils/esm/time.js","webpack://webpack-plugin/webpack/bootstrap","webpack://webpack-plugin/webpack/runtime/define property getters","webpack://webpack-plugin/webpack/runtime/global","webpack://webpack-plugin/webpack/runtime/harmony module decorator","webpack://webpack-plugin/webpack/runtime/hasOwnProperty shorthand","webpack://webpack-plugin/./node_modules/@sentry/utils/esm/is.js","webpack://webpack-plugin/./node_modules/@sentry/utils/esm/syncpromise.js","webpack://webpack-plugin/./node_modules/@sentry/utils/esm/flags.js","webpack://webpack-plugin/./node_modules/@sentry/utils/esm/logger.js","webpack://webpack-plugin/./node_modules/@sentry/hub/esm/flags.js","webpack://webpack-plugin/./node_modules/@sentry/utils/esm/browser.js","webpack://webpack-plugin/./node_modules/@sentry/utils/esm/memo.js","webpack://webpack-plugin/./node_modules/@sentry/utils/esm/string.js","webpack://webpack-plugin/./node_modules/@sentry/utils/esm/object.js","webpack://webpack-plugin/./node_modules/@sentry/utils/esm/misc.js","webpack://webpack-plugin/./node_modules/@sentry/hub/esm/session.js","webpack://webpack-plugin/./node_modules/@sentry/hub/esm/scope.js","webpack://webpack-plugin/./node_modules/@sentry/hub/esm/hub.js","webpack://webpack-plugin/./node_modules/@sentry/core/esm/flags.js","webpack://webpack-plugin/./node_modules/@sentry/core/esm/integration.js","webpack://webpack-plugin/./node_modules/@sentry/core/esm/integrations/inboundfilters.js","webpack://webpack-plugin/./node_modules/@sentry/core/esm/integrations/functiontostring.js","webpack://webpack-plugin/./node_modules/@sentry/utils/esm/stacktrace.js","webpack://webpack-plugin/./node_modules/@sentry/utils/esm/supports.js","webpack://webpack-plugin/./node_modules/@sentry/utils/esm/instrument.js","webpack://webpack-plugin/./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js","webpack://webpack-plugin/./node_modules/@sentry/utils/esm/error.js","webpack://webpack-plugin/./node_modules/@sentry/utils/esm/dsn.js","webpack://webpack-plugin/./node_modules/@sentry/utils/esm/envelope.js","webpack://webpack-plugin/./node_modules/@sentry/utils/esm/normalize.js","webpack://webpack-plugin/./node_modules/@sentry/core/esm/api.js","webpack://webpack-plugin/./node_modules/@sentry/core/esm/envelope.js","webpack://webpack-plugin/./node_modules/@sentry/core/esm/baseclient.js","webpack://webpack-plugin/./node_modules/@sentry/core/esm/version.js","webpack://webpack-plugin/./node_modules/@sentry/browser/esm/eventbuilder.js","webpack://webpack-plugin/./node_modules/@sentry/browser/esm/flags.js","webpack://webpack-plugin/./node_modules/@sentry/utils/esm/severity.js","webpack://webpack-plugin/./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js","webpack://webpack-plugin/./node_modules/@sentry/browser/esm/transports/utils.js","webpack://webpack-plugin/./node_modules/@sentry/browser/esm/client.js","webpack://webpack-plugin/./node_modules/@sentry/utils/esm/clientreport.js","webpack://webpack-plugin/./node_modules/@sentry/browser/esm/stack-parsers.js","webpack://webpack-plugin/./node_modules/@sentry/hub/esm/exports.js","webpack://webpack-plugin/./node_modules/@sentry/browser/esm/helpers.js","webpack://webpack-plugin/./node_modules/@sentry/browser/esm/integrations/trycatch.js","webpack://webpack-plugin/./node_modules/@sentry/browser/esm/integrations/globalhandlers.js","webpack://webpack-plugin/./node_modules/@sentry/browser/esm/integrations/linkederrors.js","webpack://webpack-plugin/./node_modules/@sentry/browser/esm/integrations/dedupe.js","webpack://webpack-plugin/./node_modules/@sentry/browser/esm/integrations/httpcontext.js","webpack://webpack-plugin/./node_modules/@sentry/core/esm/transports/base.js","webpack://webpack-plugin/./node_modules/@sentry/utils/esm/promisebuffer.js","webpack://webpack-plugin/./node_modules/@sentry/utils/esm/ratelimit.js","webpack://webpack-plugin/./node_modules/@sentry/browser/esm/transports/fetch.js","webpack://webpack-plugin/./node_modules/@sentry/browser/esm/transports/xhr.js","webpack://webpack-plugin/./node_modules/@sentry/browser/esm/sdk.js","webpack://webpack-plugin/./node_modules/@sentry/core/esm/sdk.js","webpack://webpack-plugin/./src/app.js"],"sourcesContent":["import { isNodeEnv } from './node.js';\n\n/** Internal */\n\nvar fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nfunction getGlobalObject() {\n  return (\n    isNodeEnv()\n      ? global\n      : typeof window !== 'undefined'       ? window       : typeof self !== 'undefined'\n      ? self\n      : fallbackGlobalObject\n  ) ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `getGlobalObject`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  var global = (obj || getGlobalObject()) ;\n  var __SENTRY__ = (global.__SENTRY__ = global.__SENTRY__ || {});\n  var singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\nexport { getGlobalObject, getGlobalSingleton };\n//# sourceMappingURL=global.js.map\n","import { isBrowserBundle } from './env.js';\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\nfunction dynamicRequire(mod, request) {\n    return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\nexport { dynamicRequire, isNodeEnv, loadModule };\n//# sourceMappingURL=node.js.map\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These fags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\nexport { isBrowserBundle };\n//# sourceMappingURL=env.js.map\n","import { getGlobalObject } from './global.js';\nimport { dynamicRequire, isNodeEnv } from './node.js';\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nvar dateTimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance() {\n  const { performance } = getGlobalObject();\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  var timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance() {\n  try {\n    var perfHooks = dynamicRequire(module, 'perf_hooks') ;\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nvar platformPerformance = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nvar timestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nvar dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nvar timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n// Re-exported with an old name for backwards-compatibility.\nvar timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nvar usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nvar browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = getGlobalObject();\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  var threshold = 3600 * 1000;\n  var performanceNow = performance.now();\n  var dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  var timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  var timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n    var navigationStart = performance.timing && performance.timing.navigationStart;\n  var hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  var navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  var navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexport { _browserPerformanceTimeOriginMode, browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds, timestampWithMs, usingPerformanceAPI };\n//# sourceMappingURL=time.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n\nfunction isBuiltin(wat, ty) {\n  return objectToString.call(wat) === `[object ${ty}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n    return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\nexport { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isNaN, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable };\n//# sourceMappingURL=is.js.map\n","import { isThenable } from './is.js';\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  var PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  var RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  var REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n   __init() {this._state = States.PENDING;}\n   __init2() {this._handlers = [];}\n  \n\n   constructor(\n    executor,\n  ) {;SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);SyncPromise.prototype.__init5.call(this);SyncPromise.prototype.__init6.call(this);\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init3() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init4() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init5() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init6() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    var cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n                handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise };\n//# sourceMappingURL=syncpromise.js.map\n","/*\n * This file defines flags and constants that can be modified during compile time in order to facilitate tree shaking\n * for users.\n *\n * Debug flags need to be declared in each package individually and must not be imported across package boundaries,\n * because some build tools have trouble tree-shaking imported guards.\n *\n * As a convention, we define debug flags in a `flags.ts` file in the root of a package's `src` folder.\n *\n * Debug flag files will contain \"magic strings\" like `__SENTRY_DEBUG__` that may get replaced with actual values during\n * our, or the user's build process. Take care when introducing new flags - they must not throw if they are not\n * replaced.\n */\n\n/** Flag that is true for debug builds, false otherwise. */\nvar IS_DEBUG_BUILD = typeof __SENTRY_DEBUG__ === 'undefined' ? true : __SENTRY_DEBUG__;\n\nexport { IS_DEBUG_BUILD };\n//# sourceMappingURL=flags.js.map\n","import { IS_DEBUG_BUILD } from './flags.js';\nimport { getGlobalObject, getGlobalSingleton } from './global.js';\n\n// TODO: Implement different loggers for different environments\nvar global = getGlobalObject();\n\n/** Prefix for logging strings */\nvar PREFIX = 'Sentry Logger ';\n\nvar CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert'] ;\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  var global = getGlobalObject();\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  var originalConsole = global.console ;\n  var wrappedLevels = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    var originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] ).__sentry_original__;\n    if (level in global.console && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] ;\n      originalConsole[level] = originalWrappedFunc ;\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level ];\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  var logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if (IS_DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n            logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            global.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger;\nif (IS_DEBUG_BUILD) {\n  logger = getGlobalSingleton('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\nexport { CONSOLE_LEVELS, consoleSandbox, logger };\n//# sourceMappingURL=logger.js.map\n","/*\n * This file defines flags and constants that can be modified during compile time in order to facilitate tree shaking\n * for users.\n *\n * Debug flags need to be declared in each package individually and must not be imported across package boundaries,\n * because some build tools have trouble tree-shaking imported guards.\n *\n * As a convention, we define debug flags in a `flags.ts` file in the root of a package's `src` folder.\n *\n * Debug flag files will contain \"magic strings\" like `__SENTRY_DEBUG__` that may get replaced with actual values during\n * our, or the user's build process. Take care when introducing new flags - they must not throw if they are not\n * replaced.\n */\n\n/** Flag that is true for debug builds, false otherwise. */\nvar IS_DEBUG_BUILD = typeof __SENTRY_DEBUG__ === 'undefined' ? true : __SENTRY_DEBUG__;\n\nexport { IS_DEBUG_BUILD };\n//# sourceMappingURL=flags.js.map\n","import { getGlobalObject } from './global.js';\nimport { isString } from './is.js';\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(elem, keyAttrs) {\n  \n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    var MAX_TRAVERSE_HEIGHT = 5;\n    var MAX_OUTPUT_LEN = 80;\n    var out = [];\n    let height = 0;\n    let len = 0;\n    var separator = ' > ';\n    var sepLength = separator.length;\n    let nextStr;\n\n        while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  var elem = el \n\n;\n\n  var out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  var keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n        className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  var allowedAttrs = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  var global = getGlobalObject();\n  try {\n    return global.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\nexport { getLocationHref, htmlTreeAsString };\n//# sourceMappingURL=browser.js.map\n","/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  var hasWeakSet = typeof WeakSet === 'function';\n  var inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n        for (let i = 0; i < inner.length; i++) {\n      var value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\nexport { memoBuilder };\n//# sourceMappingURL=memo.js.map\n","import { isString, isRegExp } from './is.js';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.substr(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  var lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n        colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  var output = [];\n    for (let i = 0; i < input.length; i++) {\n    var value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nfunction isMatchingPattern(value, pattern) {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (typeof pattern === 'string') {\n    return value.indexOf(pattern) !== -1;\n  }\n  return false;\n}\n\n/**\n * Given a string, escape characters which have meaning in the regex grammar, such that the result is safe to feed to\n * `new RegExp()`.\n *\n * Based on https://github.com/sindresorhus/escape-string-regexp. Vendored to a) reduce the size by skipping the runtime\n * type-checking, and b) ensure it gets down-compiled for old versions of Node (the published package only supports Node\n * 12+).\n *\n * @param regexString The string to escape\n * @returns An version of the string with all special regex characters escaped\n */\nfunction escapeStringForRegex(regexString) {\n  // escape the hyphen separately so we can also replace it with a unicode literal hyphen, to avoid the problems\n  // discussed in https://github.com/sindresorhus/escape-string-regexp/issues/20.\n  return regexString.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n}\n\nexport { escapeStringForRegex, isMatchingPattern, safeJoin, snipLine, truncate };\n//# sourceMappingURL=string.js.map\n","import { htmlTreeAsString } from './browser.js';\nimport { isError, isEvent, isInstanceOf, isElement, isPlainObject, isPrimitive } from './is.js';\nimport { memoBuilder } from './memo.js';\nimport { truncate } from './string.js';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  var original = source[name] ;\n  var wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      markFunctionWrapped(wrapped, original);\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n    value: value,\n    writable: true,\n    configurable: true,\n  });\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  var proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n  addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(\n  value,\n)\n\n {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    var newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    var extractedProps = {};\n    for (var property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  var keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    var serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return the new object with removed keys that value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(val) {\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(val, memoBuilder());\n}\n\nfunction _dropUndefinedKeys(val, memo) {\n  const [memoize] = memo; // we don't need unmemoize because we don't need to visit nodes twice\n\n  if (isPlainObject(val)) {\n    if (memoize(val)) {\n      return val;\n    }\n    var rv = {};\n    for (var key of Object.keys(val)) {\n      if (typeof val[key] !== 'undefined') {\n        rv[key] = _dropUndefinedKeys(val[key], memo);\n      }\n    }\n    return rv ;\n  }\n\n  if (Array.isArray(val)) {\n    if (memoize(val)) {\n      return val;\n    }\n    return (val ).map(item => {\n      return _dropUndefinedKeys(item, memo);\n    }) ;\n  }\n\n  return val;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n            objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\nexport { addNonEnumerableProperty, convertToPlainObject, dropUndefinedKeys, extractExceptionKeysForMessage, fill, getOriginalFunction, markFunctionWrapped, objectify, urlEncode };\n//# sourceMappingURL=object.js.map\n","import { getGlobalObject } from './global.js';\nimport { addNonEnumerableProperty } from './object.js';\nimport { snipLine } from './string.js';\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  var global = getGlobalObject() ;\n  var crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    var arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n        arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n        arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    var pad = (num) => {\n      let v = num.toString(16);\n      while (v.length < 4) {\n        v = `0${v}`;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7])\n    );\n  }\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, c => {\n        var r = (Math.random() * 16) | 0;\n        var v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url)\n\n {\n  if (!url) {\n    return {};\n  }\n\n  var match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  var query = match[6] || '';\n  var fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  var firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  var exception = (event.exception = event.exception || {});\n  var values = (exception.values = exception.values || []);\n  var firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  var firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  var defaultMechanism = { type: 'generic', handled: true };\n  var currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    var mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nvar SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  var match = input.match(SEMVER_REGEXP) || [];\n  var major = parseInt(match[1], 10);\n  var minor = parseInt(match[2], 10);\n  var patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  var lineno = frame.lineno || 0;\n  var maxLines = lines.length;\n  var sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => snipLine(line, 0));\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n    return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n    if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\nexport { addContextToFrame, addExceptionMechanism, addExceptionTypeValue, checkOrSetAlreadyCaught, getEventDescription, parseSemver, parseUrl, stripUrlQueryAndFragment, uuid4 };\n//# sourceMappingURL=misc.js.map\n","import { timestampInSeconds, uuid4, dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  var startingTime = timestampInSeconds();\n\n  var session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    var duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\nexport { closeSession, makeSession, updateSession };\n//# sourceMappingURL=session.js.map\n","import { isPlainObject, dateTimestampInSeconds, getGlobalSingleton, SyncPromise, logger, isThenable } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from './flags.js';\nimport { updateSession } from './session.js';\n\n/**\n * Absolute maximum number of breadcrumbs added to an event.\n * The `maxBreadcrumbs` option cannot be higher than this value.\n */\nvar MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nclass Scope  {constructor() { Scope.prototype.__init.call(this);Scope.prototype.__init2.call(this);Scope.prototype.__init3.call(this);Scope.prototype.__init4.call(this);Scope.prototype.__init5.call(this);Scope.prototype.__init6.call(this);Scope.prototype.__init7.call(this);Scope.prototype.__init8.call(this);Scope.prototype.__init9.call(this);Scope.prototype.__init10.call(this); }\n  /** Flag if notifying is happening. */\n   __init() {this._notifyingListeners = false;}\n\n  /** Callback for client to receive scope changes. */\n   __init2() {this._scopeListeners = [];}\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n   __init3() {this._eventProcessors = [];}\n\n  /** Array of breadcrumbs. */\n   __init4() {this._breadcrumbs = [];}\n\n  /** User */\n   __init5() {this._user = {};}\n\n  /** Tags */\n   __init6() {this._tags = {};}\n\n  /** Extra */\n   __init7() {this._extra = {};}\n\n  /** Contexts */\n   __init8() {this._contexts = {};}\n\n  /** Fingerprint */\n  \n\n  /** Severity */\n    \n\n  /** Transaction Name */\n  \n\n  /** Span */\n  \n\n  /** Session */\n  \n\n  /** Request Mode Session Status */\n  \n\n  /** Attachments */\n   __init9() {this._attachments = [];}\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n   __init10() {this._sdkProcessingMetadata = {};}\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n   static clone(scope) {\n    var newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n      newScope._attachments = [...scope._attachments];\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this._user = user || {};\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(\n        level,\n  ) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n            delete this._contexts[key];\n    } else {\n      this._contexts = { ...this._contexts, [key]: context };\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSpan(span) {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSpan() {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransaction() {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    var span = this.getSpan();\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      var updatedScope = (captureContext )(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n    } else if (isPlainObject(captureContext)) {\n            captureContext = captureContext ;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    var maxCrumbs = typeof maxBreadcrumbs === 'number' ? Math.min(maxBreadcrumbs, MAX_BREADCRUMBS) : MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    var mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n    this._breadcrumbs = [...this._breadcrumbs, mergedBreadcrumb].slice(-maxCrumbs);\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getAttachments() {\n    return this._attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Applies the current context and fingerprint to the event.\n   * Note that breadcrumbs will be added by the client.\n   * Also if the event has already breadcrumbs on it, we do not merge them.\n   * @param event Event\n   * @param hint May contain additional information about the original exception.\n   * @hidden\n   */\n   applyToEvent(event, hint = {}) {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      var transactionName = this._span.transaction && this._span.transaction.name;\n      if (transactionName) {\n        event.tags = { transaction: transactionName, ...event.tags };\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    event.sdkProcessingMetadata = this._sdkProcessingMetadata;\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n   _notifyEventProcessors(\n    processors,\n    event,\n    hint,\n    index = 0,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      var processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        var result = processor({ ...event }, hint) ;\n\n        IS_DEBUG_BUILD &&\n          processor.id &&\n          result === null &&\n          logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n        if (isThenable(result)) {\n          void result\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          void this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n   _applyFingerprint(event) {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint\n      ? Array.isArray(event.fingerprint)\n        ? event.fingerprint\n        : [event.fingerprint]\n      : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n  return getGlobalSingleton('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nfunction addGlobalEventProcessor(callback) {\n  getGlobalEventProcessors().push(callback);\n}\n\nexport { Scope, addGlobalEventProcessor };\n//# sourceMappingURL=scope.js.map\n","import { uuid4, dateTimestampInSeconds, consoleSandbox, logger, getGlobalObject, getGlobalSingleton, isNodeEnv } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from './flags.js';\nimport { Scope } from './scope.js';\nimport { closeSession, makeSession, updateSession } from './session.js';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nvar API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nvar DEFAULT_BREADCRUMBS = 100;\n\n/**\n * A layer in the process stack.\n * @hidden\n */\n\n/**\n * @inheritDoc\n */\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n    __init() {this._stack = [{}];}\n\n  /** Contains the last event id of a captured event.  */\n  \n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n   constructor(client, scope = new Scope(),   _version = API_VERSION) {;this._version = _version;Hub.prototype.__init.call(this);\n    this.getStackTop().scope = scope;\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   bindClient(client) {\n    var top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    var scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   popScope() {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   withScope(callback) {\n    var scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /** Returns the scope of the top stack. */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n   getStack() {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n     captureException(exception, hint) {\n    var eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    var syntheticException = new Error('Sentry syntheticException');\n    this._withClient((client, scope) => {\n      client.captureException(\n        exception,\n        {\n          originalException: exception,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n        level,\n    hint,\n  ) {\n    var eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    var syntheticException = new Error(message);\n    this._withClient((client, scope) => {\n      client.captureMessage(\n        message,\n        level,\n        {\n          originalException: message,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint) {\n    var eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (event.type !== 'transaction') {\n      this._lastEventId = eventId;\n    }\n\n    this._withClient((client, scope) => {\n      client.captureEvent(event, { ...hint, event_id: eventId }, scope);\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    const { scope, client } = this.getStackTop();\n\n    if (!scope || !client) return;\n\n        const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    var timestamp = dateTimestampInSeconds();\n    var mergedBreadcrumb = { timestamp, ...breadcrumb };\n    var finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    var scope = this.getScope();\n    if (scope) scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    var scope = this.getScope();\n    if (scope) scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    var scope = this.getScope();\n    if (scope) scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    var scope = this.getScope();\n    if (scope) scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    var scope = this.getScope();\n    if (scope) scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n     setContext(name, context) {\n    var scope = this.getScope();\n    if (scope) scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   configureScope(callback) {\n    const { scope, client } = this.getStackTop();\n    if (scope && client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   run(callback) {\n    var oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    var client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      IS_DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startTransaction(context, customSamplingContext) {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   endSession() {\n    var layer = this.getStackTop();\n    var scope = layer && layer.scope;\n    var session = scope && scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    if (scope) {\n      scope.setSession();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startSession(context) {\n    const { scope, client } = this.getStackTop();\n    const { release, environment } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    var global = getGlobalObject();\n    const { userAgent } = global.navigator || {};\n\n    var session = makeSession({\n      release,\n      environment,\n      ...(scope && { user: scope.getUser() }),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    if (scope) {\n      // End existing session if there's one\n      var currentSession = scope.getSession && scope.getSession();\n      if (currentSession && currentSession.status === 'ok') {\n        updateSession(currentSession, { status: 'exited' });\n      }\n      this.endSession();\n\n      // Afterwards we set the new session on the scope\n      scope.setSession(session);\n    }\n\n    return session;\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    const { scope, client } = this.getStackTop();\n    if (!scope) return;\n\n    var session = scope.getSession();\n    if (session) {\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n   _withClient(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(client, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n     _callExtensionMethod(method, ...args) {\n    var carrier = getMainCarrier();\n    var sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    IS_DEBUG_BUILD && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  var carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return carrier;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nfunction makeMain(hub) {\n  var registry = getMainCarrier();\n  var oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  var registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry) {\n  try {\n    var sentry = getMainCarrier().__SENTRY__;\n    var activeDomain = sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nfunction getHubFromCarrier(carrier) {\n  return getGlobalSingleton('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  var __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\nexport { API_VERSION, Hub, getCurrentHub, getHubFromCarrier, getMainCarrier, makeMain, setHubOnCarrier };\n//# sourceMappingURL=hub.js.map\n","/*\n * This file defines flags and constants that can be modified during compile time in order to facilitate tree shaking\n * for users.\n *\n * Debug flags need to be declared in each package individually and must not be imported across package boundaries,\n * because some build tools have trouble tree-shaking imported guards.\n *\n * As a convention, we define debug flags in a `flags.ts` file in the root of a package's `src` folder.\n *\n * Debug flag files will contain \"magic strings\" like `__SENTRY_DEBUG__` that may get replaced with actual values during\n * our, or the user's build process. Take care when introducing new flags - they must not throw if they are not\n * replaced.\n */\n\n/** Flag that is true for debug builds, false otherwise. */\nvar IS_DEBUG_BUILD = typeof __SENTRY_DEBUG__ === 'undefined' ? true : __SENTRY_DEBUG__;\n\nexport { IS_DEBUG_BUILD };\n//# sourceMappingURL=flags.js.map\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from './flags.js';\n\nvar installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * @private\n */\nfunction filterDuplicates(integrations) {\n  return integrations.reduce((acc, integrations) => {\n    if (acc.every(accIntegration => integrations.name !== accIntegration.name)) {\n      acc.push(integrations);\n    }\n    return acc;\n  }, [] );\n}\n\n/** Gets integration to install */\nfunction getIntegrationsToSetup(options) {\n  var defaultIntegrations = (options.defaultIntegrations && [...options.defaultIntegrations]) || [];\n  var userIntegrations = options.integrations;\n\n  let integrations = [...filterDuplicates(defaultIntegrations)];\n\n  if (Array.isArray(userIntegrations)) {\n    // Filter out integrations that are also included in user options\n    integrations = [\n      ...integrations.filter(integrations =>\n        userIntegrations.every(userIntegration => userIntegration.name !== integrations.name),\n      ),\n      // And filter out duplicated user options integrations\n      ...filterDuplicates(userIntegrations),\n    ];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = userIntegrations(integrations);\n    integrations = Array.isArray(integrations) ? integrations : [integrations];\n  }\n\n  // Make sure that if present, `Debug` integration will always run last\n  var integrationsNames = integrations.map(i => i.name);\n  var alwaysLastToRun = 'Debug';\n  if (integrationsNames.indexOf(alwaysLastToRun) !== -1) {\n    integrations.push(...integrations.splice(integrationsNames.indexOf(alwaysLastToRun), 1));\n  }\n\n  return integrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(integrations) {\n  var integrationIndex = {};\n\n  integrations.forEach(integration => {\n    integrationIndex[integration.name] = integration;\n\n    if (installedIntegrations.indexOf(integration.name) === -1) {\n      integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n      installedIntegrations.push(integration.name);\n      IS_DEBUG_BUILD && logger.log(`Integration installed: ${integration.name}`);\n    }\n  });\n\n  return integrationIndex;\n}\n\nexport { getIntegrationsToSetup, installedIntegrations, setupIntegrations };\n//# sourceMappingURL=integration.js.map\n","import { logger, getEventDescription, isMatchingPattern } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from '../flags.js';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\n/** Options for the InboundFilters integration */\n\n/** Inbound filters configurable by the user */\nclass InboundFilters  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'InboundFilters';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = InboundFilters.id;}\n\n   constructor(  _options = {}) {;this._options = _options;InboundFilters.prototype.__init.call(this);}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    var eventProcess = (event) => {\n      var hub = getCurrentHub();\n      if (hub) {\n        var self = hub.getIntegration(InboundFilters);\n        if (self) {\n          var client = hub.getClient();\n          var clientOptions = client ? client.getOptions() : {};\n          var options = _mergeOptions(self._options, clientOptions);\n          return _shouldDropEvent(event, options) ? null : event;\n        }\n      }\n      return event;\n    };\n\n    eventProcess.id = this.name;\n    addGlobalEventProcessor(eventProcess);\n  }\n} InboundFilters.__initStatic();\n\n/** JSDoc */\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...DEFAULT_IGNORE_ERRORS,\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\n/** JSDoc */\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    IS_DEBUG_BUILD &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    IS_DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    IS_DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    IS_DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  if (!ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message =>\n    ignoreErrors.some(pattern => isMatchingPattern(message, pattern)),\n  );\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  var url = _getEventFilterUrl(event);\n  return !url ? false : denyUrls.some(pattern => isMatchingPattern(url, pattern));\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  var url = _getEventFilterUrl(event);\n  return !url ? true : allowUrls.some(pattern => isMatchingPattern(url, pattern));\n}\n\nfunction _getPossibleEventMessages(event) {\n  if (event.message) {\n    return [event.message];\n  }\n  if (event.exception) {\n    try {\n      const { type = '', value = '' } = (event.exception.values && event.exception.values[0]) || {};\n      return [`${value}`, `${type}: ${value}`];\n    } catch (oO) {\n      IS_DEBUG_BUILD && logger.error(`Cannot extract message for event ${getEventDescription(event)}`);\n      return [];\n    }\n  }\n  return [];\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-ignore can't be a sentry error if undefined\n        return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    var frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-ignore we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    IS_DEBUG_BUILD && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nexport { InboundFilters, _mergeOptions, _shouldDropEvent };\n//# sourceMappingURL=inboundfilters.js.map\n","import { getOriginalFunction } from '@sentry/utils';\n\nlet originalFunctionToString;\n\n/** Patch toString calls to return proper name for wrapped functions */\nclass FunctionToString  {constructor() { FunctionToString.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'FunctionToString';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = FunctionToString.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n        originalFunctionToString = Function.prototype.toString;\n\n        Function.prototype.toString = function ( ...args) {\n      var context = getOriginalFunction(this) || this;\n      return originalFunctionToString.apply(context, args);\n    };\n  }\n} FunctionToString.__initStatic();\n\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map\n","var STACKTRACE_LIMIT = 50;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  var sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirst = 0) => {\n    var frames = [];\n\n    for (var line of stack.split('\\n').slice(skipFirst)) {\n      for (var parser of sortedParsers) {\n        var frame = parser(line);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  let localStack = stack;\n\n  var firstFrameFunction = localStack[0].function || '';\n  var lastFrameFunction = localStack[localStack.length - 1].function || '';\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n    localStack = localStack.slice(1);\n  }\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n    localStack = localStack.slice(0, -1);\n  }\n\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack\n    .slice(0, STACKTRACE_LIMIT)\n    .map(frame => ({\n      ...frame,\n      filename: frame.filename || localStack[0].filename,\n      function: frame.function || '?',\n    }))\n    .reverse();\n}\n\nvar defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\nexport { createStackParser, getFunctionName, stackParserFromStackParserOptions, stripSentryFramesAndReverse };\n//# sourceMappingURL=stacktrace.js.map\n","import { IS_DEBUG_BUILD } from './flags.js';\nimport { getGlobalObject } from './global.js';\nimport { logger } from './logger.js';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in getGlobalObject())) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\nfunction isNativeFetch(func) {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  var global = getGlobalObject();\n\n  // Fast path to avoid DOM I/O\n    if (isNativeFetch(global.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  var doc = global.document;\n    if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      var sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n                result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      IS_DEBUG_BUILD &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in getGlobalObject();\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  var global = getGlobalObject();\n      var chrome = (global ).chrome;\n  var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\nexport { isNativeFetch, supportsDOMError, supportsDOMException, supportsErrorEvent, supportsFetch, supportsHistory, supportsNativeFetch, supportsReferrerPolicy, supportsReportingObserver };\n//# sourceMappingURL=supports.js.map\n","import { IS_DEBUG_BUILD } from './flags.js';\nimport { getGlobalObject } from './global.js';\nimport { isInstanceOf, isString } from './is.js';\nimport { logger, CONSOLE_LEVELS } from './logger.js';\nimport { fill } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\nimport { supportsNativeFetch, supportsHistory } from './supports.js';\n\nvar global = getGlobalObject();\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nvar handlers = {};\nvar instrumented = {};\n\n/** Instruments given API */\nfunction instrument(type) {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      IS_DEBUG_BUILD && logger.warn('unknown instrumentation type:', type);\n      return;\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addInstrumentationHandler(type, callback) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(callback);\n  instrument(type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type, data) {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (var handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      IS_DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole() {\n  if (!('console' in global)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in global.console)) {\n      return;\n    }\n\n    fill(global.console, level, function (originalConsoleMethod) {\n      return function (...args) {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleMethod) {\n          originalConsoleMethod.apply(global.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch() {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(global, 'fetch', function (originalFetch) {\n    return function (...args) {\n      var handlerData = {\n        args,\n        fetchData: {\n          method: getFetchMethod(args),\n          url: getFetchUrl(args),\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n            return originalFetch.apply(global, args).then(\n        (response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs = []) {\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n    return String(fetchArgs[0].method).toUpperCase();\n  }\n  if (fetchArgs[1] && fetchArgs[1].method) {\n    return String(fetchArgs[1].method).toUpperCase();\n  }\n  return 'GET';\n}\n\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs = []) {\n  if (typeof fetchArgs[0] === 'string') {\n    return fetchArgs[0];\n  }\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request)) {\n    return fetchArgs[0].url;\n  }\n  return String(fetchArgs[0]);\n}\n\n/** JSDoc */\nfunction instrumentXHR() {\n  if (!('XMLHttpRequest' in global)) {\n    return;\n  }\n\n  var xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen) {\n    return function ( ...args) {\n            var xhr = this;\n      var url = args[1];\n      var xhrInfo = (xhr.__sentry_xhr__ = {\n                method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n      });\n\n      // if Sentry key appears in URL, don't capture it as a request\n            if (isString(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n        xhr.__sentry_own_request__ = true;\n      }\n\n      var onreadystatechangeHandler = function () {\n        if (xhr.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = xhr.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args,\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr,\n          });\n        }\n      };\n\n      if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n        fill(xhr, 'onreadystatechange', function (original) {\n          return function (...readyStateArgs) {\n            onreadystatechangeHandler();\n            return original.apply(xhr, readyStateArgs);\n          };\n        });\n      } else {\n        xhr.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      return originalOpen.apply(xhr, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend) {\n    return function ( ...args) {\n      if (this.__sentry_xhr__ && args[0] !== undefined) {\n        this.__sentry_xhr__.body = args[0];\n      }\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref;\n\n/** JSDoc */\nfunction instrumentHistory() {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  var oldOnPopState = global.onpopstate;\n  global.onpopstate = function ( ...args) {\n    var to = global.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    var from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function ( ...args) {\n      var url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        var from = lastHref;\n        var to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(global.history, 'pushState', historyReplacementFunction);\n  fill(global.history, 'replaceState', historyReplacementFunction);\n}\n\nvar debounceDuration = 1000;\nlet debounceTimerID;\nlet lastCapturedEvent;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous, current) {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event) {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    var target = event.target ;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler, globalListener = false) {\n  return (event) => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    var name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = global.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\n/** JSDoc */\nfunction instrumentDOM() {\n  if (!('document' in global)) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  var triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  var globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  global.document.addEventListener('click', globalDOMEventHandler, false);\n  global.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target) => {\n        var proto = (global )[target] && (global )[target].prototype;\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener) {\n      return function (\n        \n        type,\n        listener,\n        options,\n      ) {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            var el = this ;\n            var handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            var handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              var handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount += 1;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener) {\n        return function (\n          \n          type,\n          listener,\n          options,\n        ) {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              var el = this ;\n              var handlers = el.__sentry_instrumentation_handlers__ || {};\n              var handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount -= 1;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type];                 }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\nlet _oldOnErrorHandler = null;\n/** JSDoc */\nfunction instrumentError() {\n  _oldOnErrorHandler = global.onerror;\n\n  global.onerror = function (msg, url, line, column, error) {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler) {\n            return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n}\n\nlet _oldOnUnhandledRejectionHandler = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = global.onunhandledrejection;\n\n  global.onunhandledrejection = function (e) {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler) {\n            return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n}\n\nexport { addInstrumentationHandler };\n//# sourceMappingURL=instrument.js.map\n","/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    var op = ops[i] ;\n    var fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     var op = ops[i];\n//     var fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\nexport { _optionalChain };\n//# sourceMappingURL=_optionalChain.js.map\n","/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n  \n\n   constructor( message) {\n    super(message);this.message = message;;\n\n    this.name = new.target.prototype.constructor.name;\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n\nexport { SentryError };\n//# sourceMappingURL=error.js.map\n","import { SentryError } from './error.js';\nimport { IS_DEBUG_BUILD } from './flags.js';\n\n/** Regular expression used to parse a Dsn. */\nvar DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents\n */\nfunction dsnFromString(str) {\n  var match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    throw new SentryError(`Invalid Sentry Dsn: ${str}`);\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  var split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    var projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!IS_DEBUG_BUILD) {\n    return;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  var requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  requiredComponents.forEach(component => {\n    if (!dsn[component]) {\n      throw new SentryError(`Invalid Sentry Dsn: ${component} missing`);\n    }\n  });\n\n  if (!projectId.match(/^\\d+$/)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n  }\n\n  if (!isValidProtocol(protocol)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid port ${port}`);\n  }\n\n  return true;\n}\n\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nfunction makeDsn(from) {\n  var components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  validateDsn(components);\n  return components;\n}\n\n/**\n * Changes a Dsn to point to the `relay` server running in the Lambda Extension.\n *\n * This is only used by the serverless integration for AWS Lambda.\n *\n * @param originalDsn The original Dsn of the customer.\n * @returns Dsn pointing to Lambda extension.\n */\nfunction extensionRelayDSN(originalDsn) {\n  if (originalDsn === undefined) {\n    return undefined;\n  }\n\n  var dsn = dsnFromString(originalDsn);\n  dsn.host = 'localhost';\n  dsn.port = '3000';\n  dsn.protocol = 'http';\n\n  return dsnToString(dsn);\n}\n\nexport { dsnToString, extensionRelayDSN, makeDsn };\n//# sourceMappingURL=dsn.js.map\n","import { dropUndefinedKeys } from './object.js';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  var envelopeItems = envelope[1];\n  envelopeItems.forEach((envelopeItem) => {\n    var envelopeItemType = envelopeItem[0].type;\n    callback(envelopeItem, envelopeItemType);\n  });\n}\n\n// Combination of global TextEncoder and Node require('util').TextEncoder\n\nfunction encodeUTF8(input, textEncoder) {\n  var utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope, textEncoder) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (var item of items) {\n    const [itemHeaders, payload] = item ;\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n    append(typeof payload === 'string' || payload instanceof Uint8Array ? payload : JSON.stringify(payload));\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  var totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  var merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (var buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(\n  attachment,\n  textEncoder,\n) {\n  var buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nvar ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\nexport { addItemToEnvelope, createAttachmentEnvelopeItem, createEnvelope, envelopeItemTypeToDataCategory, forEachEnvelopeItem, serializeEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { isNaN, isSyntheticEvent } from './is.js';\nimport { memoBuilder } from './memo.js';\nimport { convertToPlainObject } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output..\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\nfunction normalize(input, depth = +Infinity, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n    object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  var normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo = memoBuilder(),\n) {\n  const [memoize, unmemoize] = memo;\n\n  // If the value has a `toJSON` method, see if we can bail and let it do the work\n  var valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      return valueWithToJSON.toJSON();\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // Get the simple cases out of the way first\n  if (value === null || (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))) {\n    return value ;\n  }\n\n  var stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We're also done if we've reached the max depth\n  if (depth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  var normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  var visitable = convertToPlainObject(value );\n\n  for (var visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    var visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, depth - 1, maxProperties, memo);\n\n    numAdded += 1;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n        if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n        if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    // this catches `undefined` (but not `null`, which is a primitive and can be serialized on its own)\n    if (value === void 0) {\n      return '[undefined]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    return `[object ${(Object.getPrototypeOf(value) ).constructor.name}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n    return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\nexport { normalize, normalizeToSize, visit as walk };\n//# sourceMappingURL=normalize.js.map\n","import { urlEncode, makeDsn, dsnToString } from '@sentry/utils';\n\nvar SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  var protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  var port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn) {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(dsn, tunnel) {\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  var dsn = makeDsn(dsnLike);\n  var endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (var key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'user') {\n      var user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint };\n//# sourceMappingURL=api.js.map\n","import { dsnToString, createEnvelope, dropUndefinedKeys } from '@sentry/utils';\n\n/** Extract sdk info from from the API metadata */\nfunction getSdkMetadataForEnvelopeHeader(metadata) {\n  if (!metadata || !metadata.sdk) {\n    return;\n  }\n  const { name, version } = metadata.sdk;\n  return { name, version };\n}\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  var sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  var envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n  };\n\n  var envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session];\n\n  return createEnvelope(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  var sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  var eventType = event.type || 'event';\n\n  const { transactionSampling } = event.sdkProcessingMetadata || {};\n  const { method: samplingMethod, rate: sampleRate } = transactionSampling || {};\n\n  // TODO: Below is a temporary hack in order to debug a serialization error - see\n  // https://github.com/getsentry/sentry-javascript/issues/2809,\n  // https://github.com/getsentry/sentry-javascript/pull/4425, and\n  // https://github.com/getsentry/sentry-javascript/pull/4574.\n  //\n  // TL; DR: even though we normalize all events (which should prevent this), something is causing `JSON.stringify` to\n  // throw a circular reference error.\n  //\n  // When it's time to remove it:\n  // 1. Delete everything between here and where the request object `req` is created, EXCEPT the line deleting\n  //    `sdkProcessingMetadata`\n  // 2. Restore the original version of the request body, which is commented out\n  // 3. Search for either of the PR URLs above and pull out the companion hacks in the browser playwright tests and the\n  //    baseClient tests in this package\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n  event.tags = event.tags || {};\n  event.extra = event.extra || {};\n\n  // In theory, all events should be marked as having gone through normalization and so\n  // we should never set this tag/extra data\n  if (!(event.sdkProcessingMetadata && event.sdkProcessingMetadata.baseClientNormalized)) {\n    event.tags.skippedNormalization = true;\n    event.extra.normalizeDepth = event.sdkProcessingMetadata ? event.sdkProcessingMetadata.normalizeDepth : 'unset';\n  }\n\n  // prevent this data from being sent to sentry\n  // TODO: This is NOT part of the hack - DO NOT DELETE\n  delete event.sdkProcessingMetadata;\n\n  var envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  var eventItem = [\n    {\n      type: eventType,\n      sample_rates: [{ id: samplingMethod, rate: sampleRate }],\n    },\n    event,\n  ];\n  return createEnvelope(envelopeHeaders, [eventItem]);\n}\n\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n    ...(event.type === 'transaction' &&\n      event.contexts &&\n      event.contexts.trace && {\n        // TODO: Grab this from baggage\n        trace: dropUndefinedKeys({\n          // Trace context must be defined for transactions\n                    trace_id: event.contexts.trace.trace_id ,\n          environment: event.environment,\n          release: event.release,\n          transaction: event.transaction,\n          user: event.user && {\n            id: event.user.id,\n            segment: event.user.segment,\n          },\n          public_key: dsn.publicKey,\n        }),\n      }),\n  };\n}\n\nexport { createEventEnvelope, createSessionEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { _optionalChain } from '@sentry/utils/esm/buildPolyfills';\nimport { updateSession, Scope } from '@sentry/hub';\nimport { makeDsn, logger, checkOrSetAlreadyCaught, isPrimitive, resolvedSyncPromise, addItemToEnvelope, createAttachmentEnvelopeItem, SyncPromise, uuid4, dateTimestampInSeconds, normalize, truncate, rejectedSyncPromise, SentryError, isThenable, isPlainObject } from '@sentry/utils';\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api.js';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope.js';\nimport { IS_DEBUG_BUILD } from './flags.js';\nimport { setupIntegrations } from './integration.js';\n\nvar ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /** Options passed to the SDK. */\n  \n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  \n\n  /** Array of set up integrations. */\n   __init() {this._integrations = {};}\n\n  /** Indicates whether this client's integrations have been set up. */\n   __init2() {this._integrationsInitialized = false;}\n\n  /** Number of calls being processed */\n   __init3() {this._numProcessing = 0;}\n\n  /** Holds flushable  */\n   __init4() {this._outcomes = {};}\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {;BaseClient.prototype.__init.call(this);BaseClient.prototype.__init2.call(this);BaseClient.prototype.__init3.call(this);BaseClient.prototype.__init4.call(this);\n    this._options = options;\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n      var url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options.tunnel);\n      this._transport = options.transport({\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    } else {\n      IS_DEBUG_BUILD && logger.warn('No DSN provided, client will not do anything.');\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n     captureException(exception, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      IS_DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n        level,\n    hint,\n    scope,\n  ) {\n    let eventId = hint && hint.event_id;\n\n    var promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(String(message), level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      IS_DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this._captureEvent(event, hint, scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!this._isEnabled()) {\n      IS_DEBUG_BUILD && logger.warn('SDK not enabled, will not capture session.');\n      return;\n    }\n\n    if (!(typeof session.release === 'string')) {\n      IS_DEBUG_BUILD && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    var transport = this._transport;\n    if (transport) {\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /**\n   * Sets up the integrations\n   */\n   setupIntegrations() {\n    if (this._isEnabled() && !this._integrationsInitialized) {\n      this._integrations = setupIntegrations(this._options.integrations);\n      this._integrationsInitialized = true;\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   */\n   getIntegrationById(integrationId) {\n    return this._integrations[integrationId];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    try {\n      return (this._integrations[integration.id] ) || null;\n    } catch (_oO) {\n      IS_DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    if (this._dsn) {\n      let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n      for (var attachment of hint.attachments || []) {\n        env = addItemToEnvelope(\n          env,\n          createAttachmentEnvelopeItem(attachment, _optionalChain([this, 'access', _ => _._options, 'access', _2 => _2.transportOptions, 'optionalAccess', _3 => _3.textEncoder])),\n        );\n      }\n\n      this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    if (this._dsn) {\n      var env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n      this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category) {\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      var key = `${reason}:${category}`;\n      IS_DEBUG_BUILD && logger.log(`Adding outcome: \"${key}\"`);\n\n      // The following works because undefined + 1 === NaN and NaN is falsy\n      this._outcomes[key] = this._outcomes[key] + 1 || 1;\n    }\n  }\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = false;\n    let errored = false;\n    var exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (var ex of exceptions) {\n        var mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    var sessionNonTerminal = session.status === 'ok';\n    var shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new SyncPromise(resolve => {\n      let ticked = 0;\n      var tick = 1;\n\n      var interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(event, hint, scope) {\n    const { normalizeDepth = 3, normalizeMaxBreadth = 1000 } = this.getOptions();\n    var prepared = {\n      ...event,\n      event_id: event.event_id || hint.event_id || uuid4(),\n      timestamp: event.timestamp || dateTimestampInSeconds(),\n    };\n\n    this._applyClientOptions(prepared);\n    this._applyIntegrationsMetadata(prepared);\n\n    // If we have scope given to us, use it as the base for further modifications.\n    // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n    let finalScope = scope;\n    if (hint.captureContext) {\n      finalScope = Scope.clone(finalScope).update(hint.captureContext);\n    }\n\n    // We prepare the result here with a resolved Event.\n    let result = resolvedSyncPromise(prepared);\n\n    // This should be the last thing called, since we want that\n    // {@link Hub.addEventProcessor} gets the finished prepared event.\n    if (finalScope) {\n      // Collect attachments from the hint and scope\n      var attachments = [...(hint.attachments || []), ...finalScope.getAttachments()];\n\n      if (attachments.length) {\n        hint.attachments = attachments;\n      }\n\n      // In case we have a hub we reassign it.\n      result = finalScope.applyToEvent(prepared, hint);\n    }\n\n    return result.then(evt => {\n      if (evt) {\n        // TODO this is more of the hack trying to solve https://github.com/getsentry/sentry-javascript/issues/2809\n        // it is only attached as extra data to the event if the event somehow skips being normalized\n        evt.sdkProcessingMetadata = {\n          ...evt.sdkProcessingMetadata,\n          normalizeDepth: `${normalize(normalizeDepth)} (${typeof normalizeDepth})`,\n        };\n      }\n      if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n        return this._normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n   * Normalized keys:\n   * - `breadcrumbs.data`\n   * - `user`\n   * - `contexts`\n   * - `extra`\n   * @param event Event\n   * @returns Normalized event\n   */\n   _normalizeEvent(event, depth, maxBreadth) {\n    if (!event) {\n      return null;\n    }\n\n    var normalized = {\n      ...event,\n      ...(event.breadcrumbs && {\n        breadcrumbs: event.breadcrumbs.map(b => ({\n          ...b,\n          ...(b.data && {\n            data: normalize(b.data, depth, maxBreadth),\n          }),\n        })),\n      }),\n      ...(event.user && {\n        user: normalize(event.user, depth, maxBreadth),\n      }),\n      ...(event.contexts && {\n        contexts: normalize(event.contexts, depth, maxBreadth),\n      }),\n      ...(event.extra && {\n        extra: normalize(event.extra, depth, maxBreadth),\n      }),\n    };\n    // event.contexts.trace stores information about a Transaction. Similarly,\n    // event.spans[] stores information about child Spans. Given that a\n    // Transaction is conceptually a Span, normalization should apply to both\n    // Transactions and Spans consistently.\n    // For now the decision is to skip normalization of Transactions and Spans,\n    // so this block overwrites the normalized event to add back the original\n    // Transaction information prior to normalization.\n    if (event.contexts && event.contexts.trace) {\n            normalized.contexts.trace = event.contexts.trace;\n    }\n\n    normalized.sdkProcessingMetadata = { ...normalized.sdkProcessingMetadata, baseClientNormalized: true };\n\n    return normalized;\n  }\n\n  /**\n   *  Enhances event using the client configuration.\n   *  It takes care of all \"static\" values like environment, release and `dist`,\n   *  as well as truncating overly long values.\n   * @param event event instance to be enhanced\n   */\n   _applyClientOptions(event) {\n    var options = this.getOptions();\n    const { environment, release, dist, maxValueLength = 250 } = options;\n\n    if (!('environment' in event)) {\n      event.environment = 'environment' in options ? environment : 'production';\n    }\n\n    if (event.release === undefined && release !== undefined) {\n      event.release = release;\n    }\n\n    if (event.dist === undefined && dist !== undefined) {\n      event.dist = dist;\n    }\n\n    if (event.message) {\n      event.message = truncate(event.message, maxValueLength);\n    }\n\n    var exception = event.exception && event.exception.values && event.exception.values[0];\n    if (exception && exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n\n    var request = event.request;\n    if (request && request.url) {\n      request.url = truncate(request.url, maxValueLength);\n    }\n  }\n\n  /**\n   * This function adds all used integrations to the SDK info in the event.\n   * @param event The event that will be filled with all integrations.\n   */\n   _applyIntegrationsMetadata(event) {\n    var integrationsArray = Object.keys(this._integrations);\n    if (integrationsArray.length > 0) {\n      event.sdk = event.sdk || {};\n      event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationsArray];\n    }\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        IS_DEBUG_BUILD && logger.warn(reason);\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, scope) {\n    const { beforeSend, sampleRate } = this.getOptions();\n\n    if (!this._isEnabled()) {\n      return rejectedSyncPromise(new SentryError('SDK not enabled, will not capture event.'));\n    }\n\n    var isTransaction = event.type === 'transaction';\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (!isTransaction && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error');\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n        ),\n      );\n    }\n\n    return this._prepareEvent(event, hint, scope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', event.type || 'error');\n          throw new SentryError('An event processor returned null, will not send event.');\n        }\n\n        var isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException || isTransaction || !beforeSend) {\n          return prepared;\n        }\n\n        var beforeSendResult = beforeSend(prepared, hint);\n        return _ensureBeforeSendRv(beforeSendResult);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', event.type || 'error');\n          throw new SentryError('`beforeSend` returned `null`, will not send event.');\n        }\n\n        var session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason ,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing += 1;\n    void promise.then(\n      value => {\n        this._numProcessing -= 1;\n        return value;\n      },\n      reason => {\n        this._numProcessing -= 1;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n   _sendEnvelope(envelope) {\n    if (this._transport && this._dsn) {\n      this._transport.send(envelope).then(null, reason => {\n        IS_DEBUG_BUILD && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      IS_DEBUG_BUILD && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    var outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n    \n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` is of expected type.\n */\nfunction _ensureBeforeSendRv(rv) {\n  var nullErr = '`beforeSend` method has to return `null` or a valid event.';\n  if (isThenable(rv)) {\n    return rv.then(\n      event => {\n        if (!(isPlainObject(event) || event === null)) {\n          throw new SentryError(nullErr);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`beforeSend rejected with ${e}`);\n      },\n    );\n  } else if (!(isPlainObject(rv) || rv === null)) {\n    throw new SentryError(nullErr);\n  }\n  return rv;\n}\n\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map\n","var SDK_VERSION = '7.0.0';\n\nexport { SDK_VERSION };\n//# sourceMappingURL=version.js.map\n","import { isEvent, extractExceptionKeysForMessage, normalizeToSize, addExceptionMechanism, resolvedSyncPromise, isErrorEvent, isDOMError, isDOMException, addExceptionTypeValue, isError, isPlainObject } from '@sentry/utils';\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nfunction exceptionFromError(stackParser, ex) {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  var frames = parseStackFrames(stackParser, ex);\n\n  var exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nfunction eventFromPlainObject(\n  stackParser,\n  exception,\n  syntheticException,\n  isUnhandledRejection,\n) {\n  var event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: `Non-Error ${\n            isUnhandledRejection ? 'promise rejection' : 'exception'\n          } captured with keys: ${extractExceptionKeysForMessage(exception)}`,\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception),\n    },\n  };\n\n  if (syntheticException) {\n    var frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception ).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromError(stackParser, ex) {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser,\n  ex,\n) {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  var stacktrace = ex.stacktrace || ex.stack || '';\n\n  var popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nvar reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex) {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n  var message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nfunction eventFromException(\n  stackParser,\n  exception,\n  hint,\n  attachStacktrace,\n) {\n  var syntheticException = (hint && hint.syntheticException) || undefined;\n  var event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n    level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  var syntheticException = (hint && hint.syntheticException) || undefined;\n  var event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nfunction eventFromUnknownInput(\n  stackParser,\n  exception,\n  syntheticException,\n  attachStacktrace,\n  isUnhandledRejection,\n) {\n  let event;\n\n  if (isErrorEvent(exception ) && (exception ).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    var errorEvent = exception ;\n    return eventFromError(stackParser, errorEvent.error );\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception ) || isDOMException(exception )) {\n    var domException = exception ;\n\n    if ('stack' in (exception )) {\n      event = eventFromError(stackParser, exception );\n    } else {\n      var name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      var message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    var objectException = exception ;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception , syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromString(\n  stackParser,\n  input,\n  syntheticException,\n  attachStacktrace,\n) {\n  var event = {\n    message: input,\n  };\n\n  if (attachStacktrace && syntheticException) {\n    var frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: input, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  return event;\n}\n\nexport { eventFromError, eventFromException, eventFromMessage, eventFromPlainObject, eventFromString, eventFromUnknownInput, exceptionFromError, parseStackFrames };\n//# sourceMappingURL=eventbuilder.js.map\n","/*\n * This file defines flags and constants that can be modified during compile time in order to facilitate tree shaking\n * for users.\n *\n * Debug flags need to be declared in each package individually and must not be imported across package boundaries,\n * because some build tools have trouble tree-shaking imported guards.\n *\n * As a convention, we define debug flags in a `flags.ts` file in the root of a package's `src` folder.\n *\n * Debug flag files will contain \"magic strings\" like `__SENTRY_DEBUG__` that may get replaced with actual values during\n * our, or the user's build process. Take care when introducing new flags - they must not throw if they are not\n * replaced.\n */\n\n/** Flag that is true for debug builds, false otherwise. */\nvar IS_DEBUG_BUILD = typeof __SENTRY_DEBUG__ === 'undefined' ? true : __SENTRY_DEBUG__;\n\nexport { IS_DEBUG_BUILD };\n//# sourceMappingURL=flags.js.map\n","// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nvar validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nfunction severityFromString(level) {\n  return severityLevelFromString(level) ;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\nexport { severityFromString, severityLevelFromString, validSeverityLevels };\n//# sourceMappingURL=severity.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addInstrumentationHandler, htmlTreeAsString, severityLevelFromString, safeJoin, getGlobalObject, parseUrl } from '@sentry/utils';\n\n/** JSDoc */\n\nvar BREADCRUMB_INTEGRATION_ID = 'Breadcrumbs';\n\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nclass Breadcrumbs  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = BREADCRUMB_INTEGRATION_ID;}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Breadcrumbs.id;}\n\n  /**\n   * Options of the breadcrumbs integration.\n   */\n  // This field is public, because we use it in the browser client to check if the `sentry` option is enabled.\n  \n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {;Breadcrumbs.prototype.__init.call(this);\n    this.options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n   setupOnce() {\n    if (this.options.console) {\n      addInstrumentationHandler('console', _consoleBreadcrumb);\n    }\n    if (this.options.dom) {\n      addInstrumentationHandler('dom', _domBreadcrumb(this.options.dom));\n    }\n    if (this.options.xhr) {\n      addInstrumentationHandler('xhr', _xhrBreadcrumb);\n    }\n    if (this.options.fetch) {\n      addInstrumentationHandler('fetch', _fetchBreadcrumb);\n    }\n    if (this.options.history) {\n      addInstrumentationHandler('history', _historyBreadcrumb);\n    }\n  }\n} Breadcrumbs.__initStatic();\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _domBreadcrumb(dom) {\n    function _innerDomBreadcrumb(handlerData) {\n    let target;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      target = handlerData.event.target\n        ? htmlTreeAsString(handlerData.event.target , keyAttrs)\n        : htmlTreeAsString(handlerData.event , keyAttrs);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: `ui.${handlerData.name}`,\n        message: target,\n      },\n      {\n        event: handlerData.event,\n        name: handlerData.name,\n        global: handlerData.global,\n      },\n    );\n  }\n\n  return _innerDomBreadcrumb;\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _consoleBreadcrumb(handlerData) {\n  var breadcrumb = {\n    category: 'console',\n    data: {\n      arguments: handlerData.args,\n      logger: 'console',\n    },\n    level: severityLevelFromString(handlerData.level),\n    message: safeJoin(handlerData.args, ' '),\n  };\n\n  if (handlerData.level === 'assert') {\n    if (handlerData.args[0] === false) {\n      breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n      breadcrumb.data.arguments = handlerData.args.slice(1);\n    } else {\n      // Don't capture a breadcrumb for passed assertions\n      return;\n    }\n  }\n\n  getCurrentHub().addBreadcrumb(breadcrumb, {\n    input: handlerData.args,\n    level: handlerData.level,\n  });\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _xhrBreadcrumb(handlerData) {\n  if (handlerData.endTimestamp) {\n    // We only capture complete, non-sentry requests\n    if (handlerData.xhr.__sentry_own_request__) {\n      return;\n    }\n\n    const { method, url, status_code, body } = handlerData.xhr.__sentry_xhr__ || {};\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'xhr',\n        data: {\n          method,\n          url,\n          status_code,\n        },\n        type: 'http',\n      },\n      {\n        xhr: handlerData.xhr,\n        input: body,\n      },\n    );\n\n    return;\n  }\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _fetchBreadcrumb(handlerData) {\n  // We only capture complete fetch requests\n  if (!handlerData.endTimestamp) {\n    return;\n  }\n\n  if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n    // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n    return;\n  }\n\n  if (handlerData.error) {\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data: handlerData.fetchData,\n        level: 'error',\n        type: 'http',\n      },\n      {\n        data: handlerData.error,\n        input: handlerData.args,\n      },\n    );\n  } else {\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data: {\n          ...handlerData.fetchData,\n          status_code: handlerData.response.status,\n        },\n        type: 'http',\n      },\n      {\n        input: handlerData.args,\n        response: handlerData.response,\n      },\n    );\n  }\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _historyBreadcrumb(handlerData) {\n  var global = getGlobalObject();\n  let from = handlerData.from;\n  let to = handlerData.to;\n  var parsedLoc = parseUrl(global.location.href);\n  let parsedFrom = parseUrl(from);\n  var parsedTo = parseUrl(to);\n\n  // Initial pushState doesn't provide `from` information\n  if (!parsedFrom.path) {\n    parsedFrom = parsedLoc;\n  }\n\n  // Use only the path component of the URL if the URL matches the current\n  // document (almost all the time when using pushState)\n  if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n    to = parsedTo.relative;\n  }\n  if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n    from = parsedFrom.relative;\n  }\n\n  getCurrentHub().addBreadcrumb({\n    category: 'navigation',\n    data: {\n      from,\n      to,\n    },\n  });\n}\n\nexport { BREADCRUMB_INTEGRATION_ID, Breadcrumbs };\n//# sourceMappingURL=breadcrumbs.js.map\n","import { getGlobalObject, isNativeFetch, logger, supportsFetch } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from '../flags.js';\n\nvar global = getGlobalObject();\nlet cachedFetchImpl;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * var f = window.fetch;\n * window.fetch = function () {\n *   var p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nfunction getNativeFetchImplementation() {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(global.fetch)) {\n    return (cachedFetchImpl = global.fetch.bind(global));\n  }\n\n  var document = global.document;\n  let fetchImpl = global.fetch;\n    if (document && typeof document.createElement === 'function') {\n    try {\n      var sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      var contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      IS_DEBUG_BUILD &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(global));\n  }\n\n/**\n * Sends sdk client report using sendBeacon or fetch as a fallback if available\n *\n * @param url report endpoint\n * @param body report payload\n */\nfunction sendReport(url, body) {\n  var isRealNavigator = Object.prototype.toString.call(global && global.navigator) === '[object Navigator]';\n  var hasSendBeacon = isRealNavigator && typeof global.navigator.sendBeacon === 'function';\n\n  if (hasSendBeacon) {\n    // Prevent illegal invocations - https://xgwang.me/posts/you-may-not-know-beacon/#it-may-throw-error%2C-be-sure-to-catch\n    var sendBeacon = global.navigator.sendBeacon.bind(global.navigator);\n    sendBeacon(url, body);\n  } else if (supportsFetch()) {\n    var fetch = getNativeFetchImplementation();\n    fetch(url, {\n      body,\n      method: 'POST',\n      credentials: 'omit',\n      keepalive: true,\n    }).then(null, error => logger.error(error));\n  }\n}\n\nexport { getNativeFetchImplementation, sendReport };\n//# sourceMappingURL=utils.js.map\n","import { BaseClient, SDK_VERSION, getCurrentHub, getEnvelopeEndpointWithUrlEncodedAuth } from '@sentry/core';\nimport { getGlobalObject, getEventDescription, logger, createClientReportEnvelope, dsnToString, serializeEnvelope } from '@sentry/utils';\nimport { eventFromException, eventFromMessage } from './eventbuilder.js';\nimport { IS_DEBUG_BUILD } from './flags.js';\nimport { BREADCRUMB_INTEGRATION_ID } from './integrations/breadcrumbs.js';\nimport { sendReport } from './transports/utils.js';\n\nvar globalObject = getGlobalObject();\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BrowserClient extends BaseClient {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.browser',\n      packages: [\n        {\n          name: 'npm:@sentry/browser',\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    super(options);\n\n    if (options.sendClientReports && globalObject.document) {\n      globalObject.document.addEventListener('visibilitychange', () => {\n        if (globalObject.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n        level = 'info',\n    hint,\n  ) {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint) {\n    // We only want to add the sentry event breadcrumb when the user has the breadcrumb integration installed and\n    // activated its `sentry` option.\n    // We also do not want to use the `Breadcrumbs` class here directly, because we do not want it to be included in\n    // bundles, if it is not used by the SDK.\n    // This all sadly is a bit ugly, but we currently don't have a \"pre-send\" hook on the integrations so we do it this\n    // way for now.\n    var breadcrumbIntegration = this.getIntegrationById(BREADCRUMB_INTEGRATION_ID) ;\n    if (\n      breadcrumbIntegration &&\n      // We check for definedness of `options`, even though it is not strictly necessary, because that access to\n      // `.sentry` below does not throw, in case users provided their own integration with id \"Breadcrumbs\" that does\n      // not have an`options` field\n      breadcrumbIntegration.options &&\n      breadcrumbIntegration.options.sentry\n    ) {\n      getCurrentHub().addBreadcrumb(\n        {\n          category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n          event_id: event.event_id,\n          level: event.level,\n          message: getEventDescription(event),\n        },\n        {\n          event,\n        },\n      );\n    }\n\n    super.sendEvent(event, hint);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(event, hint, scope) {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n   _flushOutcomes() {\n    var outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      IS_DEBUG_BUILD && logger.log('No outcomes to send');\n      return;\n    }\n\n    if (!this._dsn) {\n      IS_DEBUG_BUILD && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    IS_DEBUG_BUILD && logger.log('Sending outcomes:', outcomes);\n\n    var url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, this._options.tunnel);\n    var envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    try {\n      sendReport(url, serializeEnvelope(envelope));\n    } catch (e) {\n      IS_DEBUG_BUILD && logger.error(e);\n    }\n  }\n}\n\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map\n","import { createEnvelope } from './envelope.js';\nimport { dateTimestampInSeconds } from './time.js';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  var clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\nexport { createClientReportEnvelope };\n//# sourceMappingURL=clientreport.js.map\n","import { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nvar UNKNOWN_FUNCTION = '?';\n\nvar OPERA10_PRIORITY = 10;\nvar OPERA11_PRIORITY = 20;\nvar CHROME_PRIORITY = 30;\nvar WINJS_PRIORITY = 40;\nvar GECKO_PRIORITY = 50;\n\nfunction createFrame(filename, func, lineno, colno) {\n  var frame = {\n    filename,\n    function: func,\n    // All browser frames are considered in_app\n    in_app: true,\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nvar chromeRegex =\n  /^\\s*at (?:(.*?) ?\\((?:address at )?)?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nvar chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nvar chrome = line => {\n  var parts = chromeRegex.exec(line);\n\n  if (parts) {\n    var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      var subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nvar chromeStackLineParser = [CHROME_PRIORITY, chrome];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nvar geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|capacitor).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nvar gecko = line => {\n  var parts = geckoREgex.exec(line);\n\n  if (parts) {\n    var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      var subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nvar geckoStackLineParser = [GECKO_PRIORITY, gecko];\n\nvar winjsRegex =\n  /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nvar winjs = line => {\n  var parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nvar winjsStackLineParser = [WINJS_PRIORITY, winjs];\n\nvar opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nvar opera10 = line => {\n  var parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nvar opera10StackLineParser = [OPERA10_PRIORITY, opera10];\n\nvar opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nvar opera11 = line => {\n  var parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nvar opera11StackLineParser = [OPERA11_PRIORITY, opera11];\n\nvar defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nvar defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nvar extractSafariExtensionDetails = (func, filename) => {\n  var isSafariExtension = func.indexOf('safari-extension') !== -1;\n  var isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n\nexport { chromeStackLineParser, defaultStackLineParsers, defaultStackParser, geckoStackLineParser, opera10StackLineParser, opera11StackLineParser, winjsStackLineParser };\n//# sourceMappingURL=stack-parsers.js.map\n","import { getCurrentHub } from './hub.js';\n\n// Note: All functions in this file are typed with a return value of `ReturnType<Hub[HUB_FUNCTION]>`,\n// where HUB_FUNCTION is some method on the Hub class.\n//\n// This is done to make sure the top level SDK methods stay in sync with the hub methods.\n// Although every method here has an explicit return type, some of them (that map to void returns) do not\n// contain `return` keywords. This is done to save on bundle size, as `return` is not minifiable.\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @param captureContext Additional scope data to apply to exception event.\n * @returns The generated eventId.\n */\nfunction captureException(exception, captureContext) {\n  return getCurrentHub().captureException(exception, { captureContext });\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nfunction captureMessage(\n  message,\n    captureContext,\n) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  var level = typeof captureContext === 'string' ? captureContext : undefined;\n  var context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nfunction captureEvent(event, hint) {\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nfunction configureScope(callback) {\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nfunction addBreadcrumb(breadcrumb) {\n  getCurrentHub().addBreadcrumb(breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\nfunction setContext(name, context) {\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nfunction withScope(callback) {\n  getCurrentHub().withScope(callback);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nfunction startTransaction(\n  context,\n  customSamplingContext,\n) {\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\nexport { addBreadcrumb, captureEvent, captureException, captureMessage, configureScope, setContext, setExtra, setExtras, setTag, setTags, setUser, startTransaction, withScope };\n//# sourceMappingURL=exports.js.map\n","import { withScope, captureException } from '@sentry/core';\nimport { getOriginalFunction, addExceptionTypeValue, addExceptionMechanism, markFunctionWrapped, addNonEnumerableProperty } from '@sentry/utils';\n\nlet ignoreOnError = 0;\n\n/**\n * @hidden\n */\nfunction shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nfunction ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError += 1;\n  setTimeout(() => {\n    ignoreOnError -= 1;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nfunction wrap(\n  fn,\n  options\n\n = {},\n  before,\n  ) {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    var wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      return wrapper;\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n    // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  var sentryWrapped = function () {\n    var args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n            var wrappedArguments = args.map((arg) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope((scope) => {\n        scope.addEventProcessor((event) => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  \n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (var property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} \n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    var descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') ;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get() {\n          return fn.name;\n        },\n      });\n    }\n      } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n */\n\nexport { ignoreNextOnError, shouldIgnoreOnError, wrap };\n//# sourceMappingURL=helpers.js.map\n","import { getGlobalObject, fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\nimport { wrap } from '../helpers.js';\n\nvar DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nclass TryCatch  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'TryCatch';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = TryCatch.id;}\n\n  /** JSDoc */\n  \n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {;TryCatch.prototype.__init.call(this);\n    this._options = {\n      XMLHttpRequest: true,\n      eventTarget: true,\n      requestAnimationFrame: true,\n      setInterval: true,\n      setTimeout: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n   setupOnce() {\n    var global = getGlobalObject();\n\n    if (this._options.setTimeout) {\n      fill(global, 'setTimeout', _wrapTimeFunction);\n    }\n\n    if (this._options.setInterval) {\n      fill(global, 'setInterval', _wrapTimeFunction);\n    }\n\n    if (this._options.requestAnimationFrame) {\n      fill(global, 'requestAnimationFrame', _wrapRAF);\n    }\n\n    if (this._options.XMLHttpRequest && 'XMLHttpRequest' in global) {\n      fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n    }\n\n    var eventTargetOption = this._options.eventTarget;\n    if (eventTargetOption) {\n      var eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n      eventTarget.forEach(_wrapEventTarget);\n    }\n  }\n} TryCatch.__initStatic();\n\n/** JSDoc */\nfunction _wrapTimeFunction(original) {\n    return function ( ...args) {\n    var originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: true,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n/** JSDoc */\nfunction _wrapRAF(original) {\n    return function ( callback) {\n        return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: true,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\n/** JSDoc */\nfunction _wrapXHR(originalSend) {\n    return function ( ...args) {\n        var xhr = this;\n    var xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n                fill(xhr, prop, function (original) {\n          var wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          var originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\n/** JSDoc */\nfunction _wrapEventTarget(target) {\n    var global = getGlobalObject() ;\n    var proto = global[target] && global[target].prototype;\n\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original)\n\n {\n    return function (\n            \n      eventName,\n      fn,\n      options,\n    ) {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n                    fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n                wrap(fn , {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: true,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener,\n          ) {\n      return function (\n                \n        eventName,\n        fn,\n        options,\n      ) {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        var wrappedEventHandler = fn ;\n        try {\n          var originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n\nexport { TryCatch };\n//# sourceMappingURL=trycatch.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addInstrumentationHandler, isString, isPrimitive, isErrorEvent, getLocationHref, logger, addExceptionMechanism } from '@sentry/utils';\nimport { eventFromUnknownInput } from '../eventbuilder.js';\nimport { IS_DEBUG_BUILD } from '../flags.js';\nimport { shouldIgnoreOnError } from '../helpers.js';\n\n/** Global handlers */\nclass GlobalHandlers  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'GlobalHandlers';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = GlobalHandlers.id;}\n\n  /** JSDoc */\n  \n\n  /**\n   * Stores references functions to installing handlers. Will set to undefined\n   * after they have been run so that they are not used twice.\n   */\n   __init2() {this._installFunc = {\n    onerror: _installGlobalOnErrorHandler,\n    onunhandledrejection: _installGlobalOnUnhandledRejectionHandler,\n  };}\n\n  /** JSDoc */\n   constructor(options) {;GlobalHandlers.prototype.__init.call(this);GlobalHandlers.prototype.__init2.call(this);\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    Error.stackTraceLimit = 50;\n    var options = this._options;\n\n    // We can disable guard-for-in as we construct the options object above + do checks against\n    // `this._installFunc` for the property.\n        for (var key in options) {\n      var installFunc = this._installFunc[key ];\n      if (installFunc && options[key ]) {\n        globalHandlerLog(key);\n        installFunc();\n        this._installFunc[key ] = undefined;\n      }\n    }\n  }\n} GlobalHandlers.__initStatic();\n\n/** JSDoc */\nfunction _installGlobalOnErrorHandler() {\n  addInstrumentationHandler(\n    'error',\n        (data) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      const { msg, url, line, column, error } = data;\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return;\n      }\n\n      var event =\n        error === undefined && isString(msg)\n          ? _eventFromIncompleteOnError(msg, url, line, column)\n          : _enhanceEventWithInitialFrame(\n              eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n              url,\n              line,\n              column,\n            );\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onerror');\n    },\n  );\n}\n\n/** JSDoc */\nfunction _installGlobalOnUnhandledRejectionHandler() {\n  addInstrumentationHandler(\n    'unhandledrejection',\n        (e) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      let error = e;\n\n      // dig the object of the rejection out of known event types\n      try {\n        // PromiseRejectionEvents store the object of the rejection under 'reason'\n        // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n        if ('reason' in e) {\n          error = e.reason;\n        }\n        // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n        // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n        // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n        // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n        // https://github.com/getsentry/sentry-javascript/issues/2380\n        else if ('detail' in e && 'reason' in e.detail) {\n          error = e.detail.reason;\n        }\n      } catch (_oO) {\n        // no-empty\n      }\n\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return true;\n      }\n\n      var event = isPrimitive(error)\n        ? _eventFromRejectionWithPrimitive(error)\n        : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onunhandledrejection');\n      return;\n    },\n  );\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason) {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\nfunction _eventFromIncompleteOnError(msg, url, line, column) {\n  var ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  var groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  var event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n/** JSDoc */\nfunction _enhanceEventWithInitialFrame(event, url, line, column) {\n  // event.exception\n  var e = (event.exception = event.exception || {});\n  // event.exception.values\n  var ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  var ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  var ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  var ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  var colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  var lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  var filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type) {\n  IS_DEBUG_BUILD && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction addMechanismAndCapture(hub, error, event, type) {\n  addExceptionMechanism(event, {\n    handled: false,\n    type,\n  });\n  hub.captureEvent(event, {\n    originalException: error,\n  });\n}\n\nfunction getHubAndOptions() {\n  var hub = getCurrentHub();\n  var client = hub.getClient();\n  var options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return [hub, options.stackParser, options.attachStacktrace];\n}\n\nexport { GlobalHandlers };\n//# sourceMappingURL=globalhandlers.js.map\n","import { getCurrentHub, addGlobalEventProcessor } from '@sentry/core';\nimport { isInstanceOf } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder.js';\n\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nclass LinkedErrors  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'LinkedErrors';}\n\n  /**\n   * @inheritDoc\n   */\n    __init() {this.name = LinkedErrors.id;}\n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {;LinkedErrors.prototype.__init.call(this);\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    var client = getCurrentHub().getClient();\n    if (!client) {\n      return;\n    }\n    addGlobalEventProcessor((event, hint) => {\n      var self = getCurrentHub().getIntegration(LinkedErrors);\n      return self ? _handler(client.getOptions().stackParser, self._key, self._limit, event, hint) : event;\n    });\n  }\n} LinkedErrors.__initStatic();\n\n/**\n * @inheritDoc\n */\nfunction _handler(\n  parser,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return event;\n  }\n  var linkedErrors = _walkErrorTree(parser, limit, hint.originalException , key);\n  event.exception.values = [...linkedErrors, ...event.exception.values];\n  return event;\n}\n\n/**\n * JSDOC\n */\nfunction _walkErrorTree(\n  parser,\n  limit,\n  error,\n  key,\n  stack = [],\n) {\n  if (!isInstanceOf(error[key], Error) || stack.length + 1 >= limit) {\n    return stack;\n  }\n  var exception = exceptionFromError(parser, error[key]);\n  return _walkErrorTree(parser, limit, error[key], key, [exception, ...stack]);\n}\n\nexport { LinkedErrors, _handler, _walkErrorTree };\n//# sourceMappingURL=linkederrors.js.map\n","import { logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from '../flags.js';\n\n/** Deduplication filter */\nclass Dedupe  {constructor() { Dedupe.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Dedupe';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Dedupe.id;}\n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    var eventProcessor = currentEvent => {\n      var self = getCurrentHub().getIntegration(Dedupe);\n      if (self) {\n        // Juuust in case something goes wrong\n        try {\n          if (_shouldDropEvent(currentEvent, self._previousEvent)) {\n            IS_DEBUG_BUILD && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n            return null;\n          }\n        } catch (_oO) {\n          return (self._previousEvent = currentEvent);\n        }\n\n        return (self._previousEvent = currentEvent);\n      }\n      return currentEvent;\n    };\n\n    eventProcessor.id = this.name;\n    addGlobalEventProcessor(eventProcessor);\n  }\n} Dedupe.__initStatic();\n\n/** JSDoc */\nfunction _shouldDropEvent(currentEvent, previousEvent) {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\n/** JSDoc */\nfunction _isSameMessageEvent(currentEvent, previousEvent) {\n  var currentMessage = currentEvent.message;\n  var previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameExceptionEvent(currentEvent, previousEvent) {\n  var previousException = _getExceptionFromEvent(previousEvent);\n  var currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameStacktrace(currentEvent, previousEvent) {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames ;\n  previousFrames = previousFrames ;\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    var frameA = previousFrames[i];\n    var frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameFingerprint(currentEvent, previousEvent) {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint ;\n  previousFingerprint = previousFingerprint ;\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\n/** JSDoc */\nfunction _getExceptionFromEvent(event) {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\n/** JSDoc */\nfunction _getFramesFromEvent(event) {\n  var exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-ignore Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\nexport { Dedupe };\n//# sourceMappingURL=dedupe.js.map\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\n\nvar global = getGlobalObject();\n\n/** HttpContext integration collects information about HTTP request headers */\nclass HttpContext  {constructor() { HttpContext.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'HttpContext';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = HttpContext.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    addGlobalEventProcessor((event) => {\n      if (getCurrentHub().getIntegration(HttpContext)) {\n        // if none of the information we want exists, don't bother\n        if (!global.navigator && !global.location && !global.document) {\n          return event;\n        }\n\n        // grab as much info as exists and add it to the event\n        var url = (event.request && event.request.url) || (global.location && global.location.href);\n        const { referrer } = global.document || {};\n        const { userAgent } = global.navigator || {};\n\n        var headers = {\n          ...(event.request && event.request.headers),\n          ...(referrer && { Referer: referrer }),\n          ...(userAgent && { 'User-Agent': userAgent }),\n        };\n        var request = { ...(url && { url }), headers };\n\n        return { ...event, request };\n      }\n      return event;\n    });\n  }\n} HttpContext.__initStatic();\n\nexport { HttpContext };\n//# sourceMappingURL=httpcontext.js.map\n","import { makePromiseBuffer, forEachEnvelopeItem, envelopeItemTypeToDataCategory, isRateLimited, resolvedSyncPromise, createEnvelope, serializeEnvelope, logger, updateRateLimits, SentryError } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from '../flags.js';\n\nvar DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = makePromiseBuffer(options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE),\n) {\n  let rateLimits = {};\n\n  var flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    var filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      var envelopeItemDataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, envelopeItemDataCategory)) {\n        options.recordDroppedEvent('ratelimit_backoff', envelopeItemDataCategory);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n        var filteredEnvelope = createEnvelope(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    var recordEnvelopeLoss = (reason) => {\n      forEachEnvelopeItem(filteredEnvelope, (_, type) => {\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type));\n      });\n    };\n\n    var requestTask = () =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            IS_DEBUG_BUILD && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n        },\n        error => {\n          IS_DEBUG_BUILD && logger.error('Failed while sending event:', error);\n          recordEnvelopeLoss('network_error');\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          IS_DEBUG_BUILD && logger.error('Skipped sending event due to full buffer');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  return {\n    send,\n    flush,\n  };\n}\n\nexport { DEFAULT_TRANSPORT_BUFFER_SIZE, createTransport };\n//# sourceMappingURL=base.js.map\n","import { SentryError } from './error.js';\nimport { rejectedSyncPromise, SyncPromise, resolvedSyncPromise } from './syncpromise.js';\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  var buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise due to buffer limit reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    var task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      var capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n                    if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\nexport { makePromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map\n","// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nvar DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  var headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  var headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that given category is disabled until for rate limiting\n */\nfunction disabledUntil(limits, category) {\n  return limits[category] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, category, now = Date.now()) {\n  return disabledUntil(limits, category) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n * Returns true if headers contains a non-empty rate limiting header.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  var updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  var rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  var retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     */\n    for (var limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories] = limit.split(':', 2);\n      var headerDelay = parseInt(retryAfter, 10);\n      var delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (var category of categories.split(';')) {\n          updatedRateLimits[category] = now + delay;\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\nexport { DEFAULT_RETRY_AFTER, disabledUntil, isRateLimited, parseRetryAfterHeader, updateRateLimits };\n//# sourceMappingURL=ratelimit.js.map\n","import { createTransport } from '@sentry/core';\nimport { getNativeFetchImplementation } from './utils.js';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nfunction makeFetchTransport(\n  options,\n  nativeFetch = getNativeFetchImplementation(),\n) {\n  function makeRequest(request) {\n    var requestOptions = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      ...options.fetchOptions,\n    };\n\n    return nativeFetch(options.url, requestOptions).then(response => ({\n      statusCode: response.status,\n      headers: {\n        'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n        'retry-after': response.headers.get('Retry-After'),\n      },\n    }));\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeFetchTransport };\n//# sourceMappingURL=fetch.js.map\n","import { createTransport } from '@sentry/core';\nimport { SyncPromise } from '@sentry/utils';\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nvar XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nfunction makeXHRTransport(options) {\n  function makeRequest(request) {\n    return new SyncPromise((resolve, reject) => {\n      var xhr = new XMLHttpRequest();\n\n      xhr.onerror = reject;\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After'),\n            },\n          });\n        }\n      };\n\n      xhr.open('POST', options.url);\n\n      for (var header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(request.body);\n    });\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeXHRTransport };\n//# sourceMappingURL=xhr.js.map\n","import { Integrations, getIntegrationsToSetup, initAndBind, getCurrentHub, getReportDialogEndpoint } from '@sentry/core';\nimport { getGlobalObject, stackParserFromStackParserOptions, supportsFetch, logger, resolvedSyncPromise, addInstrumentationHandler } from '@sentry/utils';\nimport { BrowserClient } from './client.js';\nimport { IS_DEBUG_BUILD } from './flags.js';\nimport { wrap as wrap$1 } from './helpers.js';\nimport './integrations/index.js';\nimport { defaultStackParser } from './stack-parsers.js';\nimport './transports/index.js';\nimport { TryCatch } from './integrations/trycatch.js';\nimport { Breadcrumbs } from './integrations/breadcrumbs.js';\nimport { GlobalHandlers } from './integrations/globalhandlers.js';\nimport { LinkedErrors } from './integrations/linkederrors.js';\nimport { Dedupe } from './integrations/dedupe.js';\nimport { HttpContext } from './integrations/httpcontext.js';\nimport { makeFetchTransport } from './transports/fetch.js';\nimport { makeXHRTransport } from './transports/xhr.js';\n\nvar defaultIntegrations = [\n  new Integrations.InboundFilters(),\n  new Integrations.FunctionToString(),\n  new TryCatch(),\n  new Breadcrumbs(),\n  new GlobalHandlers(),\n  new LinkedErrors(),\n  new Dedupe(),\n  new HttpContext(),\n];\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nfunction init(options = {}) {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    var window = getGlobalObject();\n    // This supports the variable that sentry-webpack-plugin injects\n    if (window.SENTRY_RELEASE && window.SENTRY_RELEASE.id) {\n      options.release = window.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  var clientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nfunction showReportDialog(options = {}, hub = getCurrentHub()) {\n  // doesn't work without a document (React Native)\n  var global = getGlobalObject();\n  if (!global.document) {\n    IS_DEBUG_BUILD && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  const { client, scope } = hub.getStackTop();\n  var dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    IS_DEBUG_BUILD && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    options.eventId = hub.lastEventId();\n  }\n\n  var script = global.document.createElement('script');\n  script.async = true;\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n        script.onload = options.onLoad;\n  }\n\n  var injectionPoint = global.document.head || global.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    IS_DEBUG_BUILD && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nfunction lastEventId() {\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction forceLoad() {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction onLoad(callback) {\n  callback();\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nfunction flush(timeout) {\n  var client = getCurrentHub().getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  IS_DEBUG_BUILD && logger.warn('Cannot flush events. No client defined.');\n  return resolvedSyncPromise(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nfunction close(timeout) {\n  var client = getCurrentHub().getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  IS_DEBUG_BUILD && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return resolvedSyncPromise(false);\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\nfunction wrap(fn) {\n  return wrap$1(fn)();\n}\n\nfunction startSessionOnHub(hub) {\n  hub.startSession({ ignoreDuration: true });\n  hub.captureSession();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking() {\n  var window = getGlobalObject();\n  var document = window.document;\n\n  if (typeof document === 'undefined') {\n    IS_DEBUG_BUILD && logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  var hub = getCurrentHub();\n\n  // The only way for this to be false is for there to be a version mismatch between @sentry/browser (>= 6.0.0) and\n  // @sentry/hub (< 5.27.0). In the simple case, there won't ever be such a mismatch, because the two packages are\n  // pinned at the same version in package.json, but there are edge cases where it's possible. See\n  // https://github.com/getsentry/sentry-javascript/issues/3207 and\n  // https://github.com/getsentry/sentry-javascript/issues/3234 and\n  // https://github.com/getsentry/sentry-javascript/issues/3278.\n  if (!hub.captureSession) {\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSessionOnHub(hub);\n\n  // We want to create a session for every navigation as well\n  addInstrumentationHandler('history', ({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (!(from === undefined || from === to)) {\n      startSessionOnHub(getCurrentHub());\n    }\n  });\n}\n\nexport { close, defaultIntegrations, flush, forceLoad, init, lastEventId, onLoad, showReportDialog, wrap };\n//# sourceMappingURL=sdk.js.map\n","import { getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\nimport { IS_DEBUG_BUILD } from './flags.js';\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if (IS_DEBUG_BUILD) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n            console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n    }\n  }\n  var hub = getCurrentHub();\n  var scope = hub.getScope();\n  if (scope) {\n    scope.update(options.initialScope);\n  }\n\n  var client = new clientClass(options);\n  hub.bindClient(client);\n}\n\nexport { initAndBind };\n//# sourceMappingURL=sdk.js.map\n","import * as Sentry from \"@sentry/browser\";\n\nSentry.init({\n  dsn: \"https://abc67a906ca54855af677ff2638bd198@o333688.ingest.sentry.io/6464852\",\n  sendClientReports: false,\n  autoSessionTracking: false,\n  release: \"final-gzip-test-2\",\n});\n\nfunction light(msg) {\n  heavy(msg);\n}\n\nfunction heavy(msg) {\n  throw new Error(msg);\n}\n\nsetTimeout(function triggered() {\n  light(\"Gzipped artifacts\");\n});\n"],"names":["fallbackGlobalObject","getGlobalObject","g","window","self","getGlobalSingleton","name","creator","obj","global","__SENTRY__","isNodeEnv","__SENTRY_BROWSER_BUNDLE__","Object","prototype","toString","call","process","dynamicRequire","mod","request","require","dateTimestampSource","nowSeconds","Date","now","platformPerformance","module","performance","_","getNodePerformance","timeOrigin","getBrowserPerformance","timestampSource","undefined","dateTimestampInSeconds","bind","timestampInSeconds","_browserPerformanceTimeOriginMode","threshold","performanceNow","dateNow","timeOriginDelta","Math","abs","timeOriginIsReliable","navigationStart","timing","navigationStartDelta","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","id","loaded","__webpack_modules__","d","definition","key","o","defineProperty","enumerable","get","globalThis","this","Function","e","hmd","create","children","set","Error","prop","hasOwnProperty","objectToString","isError","wat","isInstanceOf","isBuiltin","ty","isErrorEvent","isDOMError","isString","isPlainObject","isEvent","Event","isThenable","Boolean","then","base","_e","States","value","SyncPromise","resolve","rejectedSyncPromise","reason","reject","__init","_state","PENDING","__init2","_handlers","constructor","executor","__init3","__init4","__init5","__init6","_resolve","_reject","onfulfilled","onrejected","push","result","_executeHandlers","catch","val","finally","onfinally","isRejected","_setResult","RESOLVED","REJECTED","state","_value","cachedHandlers","slice","forEach","handler","__SENTRY_DEBUG__","CONSOLE_LEVELS","consoleSandbox","callback","originalConsole","console","wrappedLevels","level","originalWrappedFunc","__sentry_original__","keys","makeLogger","enabled","logger","enable","disable","args","htmlTreeAsString","elem","keyAttrs","currentElem","out","height","len","sepLength","length","nextStr","_htmlElementAsString","parentNode","reverse","join","_oO","el","className","classes","attr","i","tagName","toLowerCase","keyAttrPairs","filter","keyAttr","getAttribute","map","keyAttrPair","split","allowedAttrs","memoBuilder","hasWeakSet","WeakSet","inner","has","add","delete","splice","truncate","str","max","substr","safeJoin","input","delimiter","Array","isArray","output","String","isMatchingPattern","pattern","test","indexOf","fill","source","replacementFactory","original","wrapped","markFunctionWrapped","_Oo","addNonEnumerableProperty","writable","configurable","proto","getOriginalFunction","func","convertToPlainObject","message","stack","getOwnProperties","newObj","type","target","serializeEventTarget","currentTarget","CustomEvent","detail","Element","extractedProps","property","extractExceptionKeysForMessage","exception","maxLength","sort","includedKeys","serialized","dropUndefinedKeys","_dropUndefinedKeys","memo","memoize","rv","item","uuid4","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","replace","c","r","random","parseUrl","url","match","query","fragment","host","path","protocol","relative","getFirstException","event","values","getEventDescription","event_id","eventId","firstException","addExceptionTypeValue","addExceptionMechanism","newMechanism","currentMechanism","mechanism","handled","mergedData","data","checkOrSetAlreadyCaught","__sentry_captured__","err","updateSession","session","context","user","ipAddress","ip_address","did","email","username","timestamp","time","ignoreDuration","sid","init","started","duration","release","environment","userAgent","errors","status","Scope","__init7","__init8","__init9","__init10","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_contexts","_attachments","_sdkProcessingMetadata","static","scope","newScope","_level","_span","_session","_transactionName","_fingerprint","_requestSession","addScopeListener","addEventProcessor","setUser","_notifyScopeListeners","getUser","getRequestSession","setRequestSession","requestSession","setTags","tags","setTag","setExtras","extras","setExtra","extra","setFingerprint","fingerprint","setLevel","setTransactionName","setContext","setSpan","span","getSpan","getTransaction","transaction","setSession","getSession","update","captureContext","updatedScope","contexts","clear","addBreadcrumb","breadcrumb","maxBreadcrumbs","maxCrumbs","min","mergedBreadcrumb","clearBreadcrumbs","addAttachment","attachment","getAttachments","clearAttachments","applyToEvent","hint","trace","getTraceContext","transactionName","_applyFingerprint","breadcrumbs","sdkProcessingMetadata","_notifyEventProcessors","getGlobalEventProcessors","setSDKProcessingMetadata","newData","processors","index","processor","log","final","concat","addGlobalEventProcessor","DEFAULT_BREADCRUMBS","Hub","_stack","client","_version","getStackTop","bindClient","isOlderThan","version","setupIntegrations","pushScope","clone","getScope","getStack","getClient","popScope","pop","withScope","captureException","_lastEventId","syntheticException","_withClient","originalException","captureMessage","captureEvent","lastEventId","beforeBreadcrumb","getOptions","finalBreadcrumb","configureScope","run","oldHub","makeMain","getIntegration","integration","startTransaction","customSamplingContext","_callExtensionMethod","traceHeaders","captureSession","endSession","_sendSessionUpdate","layer","closeSession","startSession","navigator","startingTime","toJSON","toISOString","attrs","user_agent","sessionToJSON","makeSession","currentSession","method","sentry","getMainCarrier","extensions","apply","carrier","hub","registry","getHubFromCarrier","setHubOnCarrier","hasHubOnCarrier","activeDomain","domain","active","registryHubTopStack","getHubFromActiveDomain","installedIntegrations","filterDuplicates","integrations","reduce","acc","every","accIntegration","getIntegrationsToSetup","options","defaultIntegrations","userIntegrations","userIntegration","integrationsNames","alwaysLastToRun","DEFAULT_IGNORE_ERRORS","InboundFilters","_options","setupOnce","getCurrentHub","eventProcess","clientOptions","internalOptions","allowUrls","denyUrls","ignoreErrors","ignoreInternal","_mergeOptions","_isSentryError","oO","_getPossibleEventMessages","some","_isIgnoredError","_getEventFilterUrl","_isDeniedUrl","_isAllowedUrl","_shouldDropEvent","frames","stacktrace","frame","filename","_getLastValidUrl","originalFunctionToString","__initStatic","FunctionToString","createStackParser","parsers","sortedParsers","a","b","p","skipFirst","line","parser","localStack","firstFrameFunction","function","lastFrameFunction","stripSentryFramesAndReverse","defaultFunctionName","getFunctionName","fn","supportsFetch","Headers","Request","Response","isNativeFetch","handlers","instrumented","addInstrumentationHandler","originalConsoleMethod","triggerHandlers","triggerDOMHandler","globalDOMEventHandler","makeDOMEventHandler","document","addEventListener","originalAddEventListener","listener","__sentry_instrumentation_handlers__","handlerForType","refCount","originalRemoveEventListener","instrumentDOM","xhrproto","XMLHttpRequest","originalOpen","xhr","xhrInfo","__sentry_xhr__","toUpperCase","__sentry_own_request__","onreadystatechangeHandler","readyState","status_code","endTimestamp","startTimestamp","onreadystatechange","readyStateArgs","originalSend","body","instrumentXHR","fetch","doc","sandbox","createElement","hidden","head","appendChild","contentWindow","removeChild","supportsNativeFetch","originalFetch","handlerData","fetchData","getFetchMethod","getFetchUrl","response","error","chrome","isChromePackagedApp","app","runtime","hasHistoryApi","history","pushState","replaceState","supportsHistory","oldOnPopState","onpopstate","to","location","href","from","lastHref","historyReplacementFunction","originalHistoryFunction","instrumentHistory","_oldOnErrorHandler","onerror","msg","column","arguments","_oldOnUnhandledRejectionHandler","onunhandledrejection","instrument","fetchArgs","debounceTimerID","lastCapturedEvent","globalListener","isContentEditable","shouldSkipDOMEvent","previous","current","shouldShortcircuitPreviousDebounce","clearTimeout","setTimeout","_optionalChain","ops","lastAccessLHS","op","SentryError","super","setPrototypeOf","DSN_REGEX","dsn","withPassword","pass","port","projectId","publicKey","dsnFromComponents","components","exec","lastPath","projectMatch","dsnFromString","component","isValidProtocol","isNaN","parseInt","validateDsn","createEnvelope","headers","items","addItemToEnvelope","envelope","newItem","forEachEnvelopeItem","envelopeItem","envelopeItemType","encodeUTF8","textEncoder","TextEncoder","encode","serializeEnvelope","envHeaders","parts","JSON","stringify","append","next","itemHeaders","payload","Uint8Array","buffers","totalLength","buf","merged","offset","buffer","concatBuffers","createAttachmentEnvelopeItem","content_type","contentType","attachment_type","attachmentType","ITEM_TYPE_TO_DATA_CATEGORY_MAP","sessions","client_report","user_report","envelopeItemTypeToDataCategory","normalize","depth","maxProperties","visit","ERROR","normalizeToSize","object","maxSize","normalized","encodeURI","utf8Length","unmemoize","valueWithToJSON","includes","stringified","_events","isSyntheticEvent","getPrototypeOf","stringifyValue","startsWith","numAdded","visitable","visitKey","visitValue","getEnvelopeEndpointWithUrlEncodedAuth","tunnel","getBaseApiEndpoint","_getIngestEndpoint","sentry_key","sentry_version","encodeURIComponent","_encodedAuth","getSdkMetadataForEnvelopeHeader","metadata","sdk","ALREADY_SEEN_ERROR","BaseClient","_integrations","_integrationsInitialized","_numProcessing","_outcomes","_dsn","_transport","transport","recordDroppedEvent","transportOptions","_process","eventFromException","_captureEvent","promisedEvent","eventFromMessage","_isEnabled","sendSession","getDsn","getTransport","flush","timeout","_isClientDoneProcessing","clientFinished","transportFlushed","close","integrationIndex","getIntegrationById","integrationId","sendEvent","env","sdkInfo","eventType","transactionSampling","samplingMethod","rate","sampleRate","packages","enhanceEventWithSdkInfo","baseClientNormalized","skippedNormalization","normalizeDepth","envelopeHeaders","sent_at","trace_id","segment","public_key","createEventEnvelopeHeaders","sample_rates","createEventEnvelope","_metadata","attachments","_2","_3","_sendEnvelope","createSessionEnvelope","category","sendClientReports","_updateSessionFromEvent","crashed","errored","exceptions","ex","sessionNonTerminal","Number","ticked","interval","setInterval","clearInterval","_prepareEvent","normalizeMaxBreadth","prepared","_applyClientOptions","_applyIntegrationsMetadata","finalScope","evt","_normalizeEvent","maxBreadth","dist","maxValueLength","integrationsArray","_processEvent","finalEvent","beforeSend","isTransaction","__sentry__","nullErr","_ensureBeforeSendRv","processedEvent","promise","send","_clearOutcomes","outcomes","quantity","SDK_VERSION","exceptionFromError","stackParser","parseStackFrames","extractMessage","eventFromError","popSize","framesToPop","reactMinifiedRegexp","getPopSize","eventFromUnknownInput","attachStacktrace","isUnhandledRejection","domException","eventFromString","code","__serialized__","eventFromPlainObject","synthetic","validSeverityLevels","BREADCRUMB_INTEGRATION_ID","Breadcrumbs","dom","_consoleBreadcrumb","serializeAttribute","_xhrBreadcrumb","_fetchBreadcrumb","_historyBreadcrumb","parsedLoc","parsedFrom","parsedTo","cachedFetchImpl","getNativeFetchImplementation","fetchImpl","globalObject","BrowserClient","visibilityState","_flushOutcomes","breadcrumbIntegration","platform","discarded_events","sendBeacon","credentials","keepalive","sendReport","UNKNOWN_FUNCTION","createFrame","lineno","colno","in_app","chromeRegex","chromeEvalRegex","geckoREgex","geckoEvalRegex","winjsRegex","defaultStackParser","subMatch","extractSafariExtensionDetails","isSafariExtension","isSafariWebExtension","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","wrap","before","wrapper","__sentry_wrapped__","sentryWrapped","wrappedArguments","arg","getOwnPropertyDescriptor","DEFAULT_EVENT_TARGET","TryCatch","eventTarget","requestAnimationFrame","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","_wrapEventTarget","originalCallback","wrapOptions","originalFunction","eventName","handleEvent","wrappedEventHandler","originalEventHandler","GlobalHandlers","_installFunc","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","stackTraceLimit","installFunc","getHubAndOptions","groups","_enhanceEventWithInitialFrame","_eventFromIncompleteOnError","addMechanismAndCapture","ev","ev0","ev0s","ev0sf","getLocationHref","LinkedErrors","_key","_limit","limit","linkedErrors","_walkErrorTree","_handler","Dedupe","eventProcessor","currentEvent","previousEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","_isSameMessageEvent","previousException","_getExceptionFromEvent","currentException","_isSameExceptionEvent","_previousEvent","currentFrames","_getFramesFromEvent","previousFrames","frameA","frameB","currentFingerprint","previousFingerprint","HttpContext","referrer","Referer","createTransport","makeRequest","remove","task","$","taskProducer","drain","counter","capturedSetTimeout","makePromiseBuffer","bufferSize","rateLimits","filteredEnvelopeItems","envelopeItemDataCategory","limits","all","disabledUntil","isRateLimited","filteredEnvelope","recordEnvelopeLoss","statusCode","updatedRateLimits","rateLimitHeader","retryAfterHeader","trim","retryAfter","categories","headerDelay","delay","header","headerDate","parse","parseRetryAfterHeader","updateRateLimits","makeFetchTransport","nativeFetch","requestOptions","referrerPolicy","fetchOptions","makeXHRTransport","getResponseHeader","open","setRequestHeader","startSessionOnHub","SENTRY_RELEASE","autoSessionTracking","clientClass","debug","warn","initialScope","initAndBind","startSessionTracking","heavy"],"mappings":"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"}